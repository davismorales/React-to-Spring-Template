<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.datediff.mapper.DateDiffMapper">
  <resultMap id="BaseResultMap" type="mybatis.datediff.model.DateDiff">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 15 01:16:08 CDT 2023.
    -->
    <id column="pk" jdbcType="INTEGER" property="pk" />
    <result column="years" jdbcType="BIGINT" property="years" />
    <result column="months" jdbcType="BIGINT" property="months" />
    <result column="weeks" jdbcType="BIGINT" property="weeks" />
    <result column="days" jdbcType="BIGINT" property="days" />
    <result column="minutes" jdbcType="BIGINT" property="minutes" />
    <result column="seconds" jdbcType="BIGINT" property="seconds" />
    <result column="from_date" jdbcType="VARCHAR" property="fromDate" />
    <result column="from_time" jdbcType="VARCHAR" property="fromTime" />
    <result column="to_date" jdbcType="VARCHAR" property="toDate" />
    <result column="to_time" jdbcType="VARCHAR" property="toTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 15 01:16:08 CDT 2023.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 15 01:16:08 CDT 2023.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 15 01:16:08 CDT 2023.
    -->
    pk, years, months, weeks, days, minutes, seconds, from_date, from_time, to_date, 
    to_time
  </sql>
  <select id="selectByExample" parameterType="mybatis.datediff.model.DateDiffExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 15 01:16:08 CDT 2023.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reactspring.date_diff
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 15 01:16:08 CDT 2023.
    -->
    select 
    <include refid="Base_Column_List" />
    from reactspring.date_diff
    where pk = #{pk,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 15 01:16:08 CDT 2023.
    -->
    delete from reactspring.date_diff
    where pk = #{pk,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="mybatis.datediff.model.DateDiffExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 15 01:16:08 CDT 2023.
    -->
    delete from reactspring.date_diff
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mybatis.datediff.model.DateDiff">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 15 01:16:08 CDT 2023.
    -->
    <selectKey keyProperty="pk" order="BEFORE" resultType="java.lang.Integer">
      SELECT nextval('reactspring."dateDiff_pk_seq"'::regclass)::int8
    </selectKey>
    insert into reactspring.date_diff (pk, years, months, 
      weeks, days, minutes, 
      seconds, from_date, from_time, 
      to_date, to_time)
    values (#{pk,jdbcType=INTEGER}, #{years,jdbcType=BIGINT}, #{months,jdbcType=BIGINT}, 
      #{weeks,jdbcType=BIGINT}, #{days,jdbcType=BIGINT}, #{minutes,jdbcType=BIGINT}, 
      #{seconds,jdbcType=BIGINT}, #{fromDate,jdbcType=VARCHAR}, #{fromTime,jdbcType=VARCHAR}, 
      #{toDate,jdbcType=VARCHAR}, #{toTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="mybatis.datediff.model.DateDiff">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 15 01:16:08 CDT 2023.
    -->
    <selectKey keyProperty="pk" order="BEFORE" resultType="java.lang.Integer">
      SELECT nextval('reactspring."dateDiff_pk_seq"'::regclass)::int8
    </selectKey>
    insert into reactspring.date_diff
    <trim prefix="(" suffix=")" suffixOverrides=",">
      pk,
      <if test="years != null">
        years,
      </if>
      <if test="months != null">
        months,
      </if>
      <if test="weeks != null">
        weeks,
      </if>
      <if test="days != null">
        days,
      </if>
      <if test="minutes != null">
        minutes,
      </if>
      <if test="seconds != null">
        seconds,
      </if>
      <if test="fromDate != null">
        from_date,
      </if>
      <if test="fromTime != null">
        from_time,
      </if>
      <if test="toDate != null">
        to_date,
      </if>
      <if test="toTime != null">
        to_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{pk,jdbcType=INTEGER},
      <if test="years != null">
        #{years,jdbcType=BIGINT},
      </if>
      <if test="months != null">
        #{months,jdbcType=BIGINT},
      </if>
      <if test="weeks != null">
        #{weeks,jdbcType=BIGINT},
      </if>
      <if test="days != null">
        #{days,jdbcType=BIGINT},
      </if>
      <if test="minutes != null">
        #{minutes,jdbcType=BIGINT},
      </if>
      <if test="seconds != null">
        #{seconds,jdbcType=BIGINT},
      </if>
      <if test="fromDate != null">
        #{fromDate,jdbcType=VARCHAR},
      </if>
      <if test="fromTime != null">
        #{fromTime,jdbcType=VARCHAR},
      </if>
      <if test="toDate != null">
        #{toDate,jdbcType=VARCHAR},
      </if>
      <if test="toTime != null">
        #{toTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mybatis.datediff.model.DateDiffExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 15 01:16:08 CDT 2023.
    -->
    select count(*) from reactspring.date_diff
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 15 01:16:08 CDT 2023.
    -->
    update reactspring.date_diff
    <set>
      <if test="row.pk != null">
        pk = #{row.pk,jdbcType=INTEGER},
      </if>
      <if test="row.years != null">
        years = #{row.years,jdbcType=BIGINT},
      </if>
      <if test="row.months != null">
        months = #{row.months,jdbcType=BIGINT},
      </if>
      <if test="row.weeks != null">
        weeks = #{row.weeks,jdbcType=BIGINT},
      </if>
      <if test="row.days != null">
        days = #{row.days,jdbcType=BIGINT},
      </if>
      <if test="row.minutes != null">
        minutes = #{row.minutes,jdbcType=BIGINT},
      </if>
      <if test="row.seconds != null">
        seconds = #{row.seconds,jdbcType=BIGINT},
      </if>
      <if test="row.fromDate != null">
        from_date = #{row.fromDate,jdbcType=VARCHAR},
      </if>
      <if test="row.fromTime != null">
        from_time = #{row.fromTime,jdbcType=VARCHAR},
      </if>
      <if test="row.toDate != null">
        to_date = #{row.toDate,jdbcType=VARCHAR},
      </if>
      <if test="row.toTime != null">
        to_time = #{row.toTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Apr 15 01:16:08 CDT 2023.
    -->
    update reactspring.date_diff
    set pk = #{row.pk,jdbcType=INTEGER},
      years = #{row.years,jdbcType=BIGINT},
      months = #{row.months,jdbcType=BIGINT},
      weeks = #{row.weeks,jdbcType=BIGINT},
      days = #{row.days,jdbcType=BIGINT},
      minutes = #{row.minutes,jdbcType=BIGINT},
      seconds = #{row.seconds,jdbcType=BIGINT},
      from_date = #{row.fromDate,jdbcType=VARCHAR},
      from_time = #{row.fromTime,jdbcType=VARCHAR},
      to_date = #{row.toDate,jdbcType=VARCHAR},
      to_time = #{row.toTime,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>